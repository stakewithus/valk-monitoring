{"version":3,"sources":["../../../src/plugins/influxdb-client/line-protocol.js"],"names":["commaSeperator","body","wrapper","reduce","acc","key","idx","valStr","String","val","replace","parsePoint","measurement","tags","fields","timestamp","tagStr","fieldStr","lineMsg","parse","points","point","msg"],"mappings":";;;;;;;;;;;;;AAAA;AACA,IAAMA,iBAAiB,SAAjBA,cAAiB,CAACC,IAAD,EAAOC,OAAP;AAAA,SAAmB,oBAAYD,IAAZ,EAAkBE,MAAlB,CAAyB,UAACC,GAAD,EAAMC,GAAN,EAAWC,GAAX,EAAmB;AACpF,QAAMC,SAASC,OAAOP,KAAKI,GAAL,CAAP,CAAf;AACA,QAAMI,MAAMF,OAAOG,OAAP,CAAe,iBAAf,EAAkC,MAAlC,CAAZ;AACA,QAAIJ,QAAQ,CAAZ,EAAe;AACb,aAAUF,GAAV,SAAiBC,GAAjB,SAAwBI,GAAxB;AACD;AACD,WAAUJ,GAAV,SAAiBI,GAAjB;AACD,GAPyC,EAOvC,EAPuC,CAAnB;AAAA,CAAvB;;AASA,IAAME,aAAa,SAAbA,UAAa,OAKb;AAAA,MAJJC,WAII,QAJJA,WAII;AAAA,MAHJC,IAGI,QAHJA,IAGI;AAAA,MAFJC,MAEI,QAFJA,MAEI;AAAA,MADJC,SACI,QADJA,SACI;;AACJ,MAAMC,SAAShB,eAAea,IAAf,CAAf;AACA,MAAMI,WAAWjB,eAAec,MAAf,CAAjB;AACA,MAAMI,UAAaN,WAAb,SAA4BI,MAA5B,SAAsCC,QAAtC,IAAiDF,kBAAgBA,SAAhB,GAA8B,EAA/E,CAAN;AACA,SAAOG,OAAP;AACD,CAVD;;AAYA,IAAMC,QAAQ,SAARA,KAAQ,CAACC,MAAD;AAAA,SAAYA,OAAOjB,MAAP,CAAc,UAACC,GAAD,EAAMiB,KAAN,EAAaf,GAAb,EAAqB;AAC3D,QAAMgB,MAAMX,WAAWU,KAAX,CAAZ;AACA,QAAIf,QAAQ,CAAZ,EAAe;AACb,aAAUF,GAAV,UAAkBkB,GAAlB;AACD;AACD,WAAOA,GAAP;AACD,GANyB,EAMvB,EANuB,CAAZ;AAAA,CAAd;;QASEH,K,GAAAA,K","file":"line-protocol.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\nconst commaSeperator = (body, wrapper) => Object.keys(body).reduce((acc, key, idx) => {\n  const valStr = String(body[key]);\n  const val = valStr.replace(/[=${}()|[\\]\\\\]/g, '\\\\$&');\n  if (idx !== 0) {\n    return `${acc},${key}=${val}`;\n  }\n  return `${key}=${val}`;\n}, '');\n\nconst parsePoint = ({\n  measurement,\n  tags,\n  fields,\n  timestamp,\n}) => {\n  const tagStr = commaSeperator(tags);\n  const fieldStr = commaSeperator(fields);\n  const lineMsg = `${measurement},${tagStr} ${fieldStr}${timestamp ? ` ${timestamp}` : ''}`;\n  return lineMsg;\n};\n\nconst parse = (points) => points.reduce((acc, point, idx) => {\n  const msg = parsePoint(point);\n  if (idx !== 0) {\n    return `${acc}\\n${msg}`;\n  }\n  return msg;\n}, '');\n\nexport {\n  parse,\n};\n"]}