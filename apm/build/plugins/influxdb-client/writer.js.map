{"version":3,"sources":["../../../src/plugins/influxdb-client/writer.js"],"names":["Bluebird","promisifyAll","request","write","host","db","points","rhost","process","env","INFLUXDB_HOST","INFLUXDB_PORT","lineMsg","res","postAsync","uri","qs","precision","body","toJSON","statusCode","console","log","writePoints"],"mappings":";;;;;;AAAA;;;;AACA;;;;AAEA;;;;AAIAA,mBAASC,YAAT,CAAsBC,iBAAtB;;AAEA,IAAMC,QAAQ,eAARA,KAAQ,CAAOC,IAAP,EAAaC,EAAb,EAAiBC,MAAjB,EAA4B;AACxC,MAAIC,QAAQH,IAAZ;AACA,MAAI,CAACG,KAAL,EAAY;AACVA,YAASC,QAAQC,GAAR,CAAYC,aAAZ,IAA6BF,QAAQC,GAAR,CAAYE,aAA1C,GAA8DH,QAAQC,GAAR,CAAYC,aAA1E,SAA2FF,QAAQC,GAAR,CAAYE,aAAvG,GAAyH,uBAAjI;AACD;AACD,MAAMC,UAAU,yBAAMN,MAAN,CAAhB;AACA,MAAMO,MAAM,MAAMX,kBAAQY,SAAR,CAAkB;AAClCC,SAAQR,KAAR,WADkC;AAElCS,QAAI;AACFX,YADE;AAEFY,iBAAW;AAFT,KAF8B;AAMlCC,UAAMN;AAN4B,GAAlB,CAAlB;;AANwC,oBAiBpCC,IAAIM,MAAJ,EAjBoC;AAAA,MAetCC,UAfsC,eAetCA,UAfsC;AAAA,MAgBtCF,IAhBsC,eAgBtCA,IAhBsC;;AAkBxC,MAAIE,eAAe,GAAf,IAAsBF,SAAS,EAAnC,EAAuC;AACrC,WAAO,IAAP;AACD;AACDG,UAAQC,GAAR,CAAY,2BAAZ,EAAyCF,UAAzC,EAAqDF,IAArD;AACA,SAAO,KAAP;AACD,CAvBD;;kBAyBe;AAAA,MACbd,IADa,QACbA,IADa;AAAA,SAER;AACLmB,iBAAa,qBAAClB,EAAD;AAAA,aAAQ,UAACC,MAAD;AAAA,eAAYH,MAAMC,IAAN,EAAYC,EAAZ,EAAgBC,MAAhB,CAAZ;AAAA,OAAR;AAAA;AADR,GAFQ;AAAA,C","file":"writer.js","sourcesContent":["import Bluebird from 'bluebird';\nimport request from 'request';\n\nimport {\n  parse,\n} from './line-protocol';\n\nBluebird.promisifyAll(request);\n\nconst write = async (host, db, points) => {\n  let rhost = host;\n  if (!rhost) {\n    rhost = (process.env.INFLUXDB_HOST && process.env.INFLUXDB_PORT) ? `${process.env.INFLUXDB_HOST}:${process.env.INFLUXDB_PORT}` : 'http://127.0.0.1:8086';\n  }\n  const lineMsg = parse(points);\n  const res = await request.postAsync({\n    uri: `${rhost}/write`,\n    qs: {\n      db,\n      precision: 'ms',\n    },\n    body: lineMsg,\n  });\n  const {\n    statusCode,\n    body,\n  } = res.toJSON();\n  if (statusCode === 204 && body === '') {\n    return true;\n  }\n  console.log('Influxdb writer response:', statusCode, body);\n  return false;\n};\n\nexport default ({\n  host,\n}) => ({\n  writePoints: (db) => (points) => write(host, db, points),\n});\n"]}