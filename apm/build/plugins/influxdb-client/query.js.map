{"version":3,"sources":["../../../src/plugins/influxdb-client/query.js"],"names":["Bluebird","promisifyAll","request","execQuery","host","db","query","params","rhost","process","env","INFLUXDB_HOST","INFLUXDB_PORT","response","postAsync","uri","qs","q","data","JSON","parse","body","error","Error","results","exec"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;;;AAEAA,mBAASC,YAAT,CAAsBC,iBAAtB;;AAEA,IAAMC,YAAY,eAAZA,SAAY,OAKZ;AAAA,MAJJC,IAII,QAJJA,IAII;AAAA,MAHJC,EAGI,QAHJA,EAGI;AAAA,MAFJC,KAEI,QAFJA,KAEI;AAAA,MADJC,MACI,QADJA,MACI;;AACJ,MAAIC,QAAQJ,IAAZ;AACA,MAAI,CAACI,KAAL,EAAY;AACVA,YAASC,QAAQC,GAAR,CAAYC,aAAZ,IAA6BF,QAAQC,GAAR,CAAYE,aAA1C,GAA8DH,QAAQC,GAAR,CAAYC,aAA1E,SAA2FF,QAAQC,GAAR,CAAYE,aAAvG,GAAyH,uBAAjI;AACD;AACD,MAAMC,WAAW,MAAMX,kBAAQY,SAAR,CAAkB;AACvCC,SAAQP,KAAR,WADuC;AAEvCQ,QAAI;AACFX,YADE;AAEFY,SAAGX,KAFD;AAGFC,cAAQ,yBAAeA,MAAf;AAHN;AAFmC,GAAlB,CAAvB;AAQA,MAAMW,OAAOC,KAAKC,KAAL,CAAWP,SAASQ,IAApB,CAAb;AACA,MAAIH,KAAKI,KAAT,EAAgB,MAAM,IAAIC,KAAJ,CAAUL,KAAKI,KAAf,CAAN;AAChB,SAAOJ,KAAKM,OAAZ;AACD,CArBD;;kBAuBe;AAAA,MACbpB,IADa,SACbA,IADa;AAAA,SAET,UAACC,EAAD;AAAA,WAAS;AACboB,YAAM;AAAA,YACJnB,KADI,SACJA,KADI;AAAA,YAEJC,MAFI,SAEJA,MAFI;AAAA,eAGAJ,UAAU;AACdC,oBADc;AAEdC,gBAFc;AAGdC,sBAHc;AAIdC;AAJc,SAAV,CAHA;AAAA;AADO,KAAT;AAAA,GAFS;AAAA,C","file":"query.js","sourcesContent":["import Bluebird from 'bluebird';\nimport request from 'request';\n\nBluebird.promisifyAll(request);\n\nconst execQuery = async ({\n  host,\n  db,\n  query,\n  params,\n}) => {\n  let rhost = host;\n  if (!rhost) {\n    rhost = (process.env.INFLUXDB_HOST && process.env.INFLUXDB_PORT) ? `${process.env.INFLUXDB_HOST}:${process.env.INFLUXDB_PORT}` : 'http://127.0.0.1:8086';\n  }\n  const response = await request.postAsync({\n    uri: `${rhost}/query`,\n    qs: {\n      db,\n      q: query,\n      params: JSON.stringify(params),\n    },\n  });\n  const data = JSON.parse(response.body);\n  if (data.error) throw new Error(data.error);\n  return data.results;\n};\n\nexport default ({\n  host,\n}) => (db) => ({\n  exec: ({\n    query,\n    params,\n  }) => execQuery({\n    host,\n    db,\n    query,\n    params,\n  }),\n});\n"]}