{"version":3,"sources":["../../../../src/plugins/backends/consul2/api.spec.js"],"names":["Bluebird","promisifyAll","fs","persistToFile","fName","output","writeFileAsync","describe","backend","before","api","Api","nodeAddress","it","res","catalog","list","assert","equal","length","node","property","Address","agent","service","svcList","svcRunning","upsert","MockInput","svcDef","svc","filter","svcName","Service","check","chkList","svcChk","chkName","ServiceID","ttlPass","ttlWarn","ttlFail","listByFilter","Status","kv","fail","e","Error","statusCode","cas","get","k","Key","b","Buffer","from","Value","v","JSON","parse","toString","expected","deepEqual","del","recurse","destroy"],"mappings":"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","file":"api.spec.js","sourcesContent":["import fs from 'fs';\nimport Bluebird from 'bluebird';\n\nimport { assert } from 'chai';\nimport Backend from './api';\nimport MockInput from './fixtures/mock_input';\nimport NockConsulAPI from './nocks/api';\n\nBluebird.promisifyAll(fs);\nconst persistToFile = async (fName, output) => { // eslint-disable-line\n  await fs.writeFileAsync(fName, JSON.stringify(output, null, 2));\n};\n\ndescribe('Consul Backend Tests', () => {\n  const backend = Backend();\n  describe('# Consul API', () => {\n    before(async () => {\n      await NockConsulAPI('127.0.0.1', 8500);\n    });\n    const api = backend.Api;\n    // const nodeID = '0aeb6c10-391e-ad19-fa61-5e28e61af5df';\n    const nodeAddress = '127.0.0.1';\n    describe('## Catalog', () => {\n      it('should list all nodes', async () => {\n        const res = await api.catalog.list();\n        assert.equal(res.length, 1);\n        const [node] = res;\n        assert.property(node, 'Node');\n        assert.property(node, 'ID');\n        // assert.equal(node.ID, nodeID);\n        assert.equal(node.Address, nodeAddress);\n      });\n    });\n    describe('## Agent Pt 1', () => {\n      describe('## Services Pt 1', () => {\n        it('should list all services on agent', async () => {\n          const res = await api.agent.service.list();\n          const svcList = Object.keys(res);\n          const svcRunning = svcList.length > 0;\n          assert.equal(svcRunning, true);\n        });\n        it('should register new service on agent', async () => {\n          // This endpoint on success returns 200 and a blank body, \"\"\n          const res = await api.agent.service.upsert(MockInput.svcDef);\n          assert.equal(res, '');\n        });\n        it('should check that service is registered on agent', async () => {\n          // This endpoint on success returns 200 and a blank body, \"\"\n          const res = await api.agent.service.list();\n          const svcList = Object.keys(res);\n          const svc = svcList.filter((svcName) => res[svcName].Service === 'bcl-commit-hub');\n          assert.equal(typeof svc === 'undefined', false);\n        });\n      }); // End of Services Pt 1\n      describe('## Checks Pt 1', () => {\n        it('should list all checks on agent', async () => {\n          const res = await api.agent.check.list();\n          // Verify that we have 5 checks with serviceID bcl-commit-hub\n          const chkList = Object.keys(res);\n          const svcChk = chkList.filter((chkName) => res[chkName].ServiceID === 'bcl-commit-hub');\n          assert.equal(svcChk.length, 5);\n          // await persistToFile('api_agent_check_list_1.json', res);\n        });\n        it('should ttl pass check []', async () => {\n          // This endpoint on success returns 200 and a blank body, \"\"\n          const res = await api.agent.check.ttlPass('service:bcl-commit-hub:3', '1 missed blocks in last 100');\n          assert.equal(res, '');\n          // await persistToFile('api_agent_check_ttl_pass_1.json', res);\n        });\n        it('should ttl warn check []', async () => {\n          const res = await api.agent.check.ttlWarn('service:bcl-commit-hub:4', 'Last block time is 40s behind current time');\n          assert.equal(res, '');\n        });\n        it('should ttl fail check []', async () => {\n          const res = await api.agent.check.ttlFail('service:bcl-commit-hub:5', 'Peer count has dropped below 5');\n          assert.equal(res, '');\n        });\n        it('should list all checks on agent again', async () => {\n          const res = await api.agent.check.listByFilter('ServiceID == \"bcl-commit-hub\"');\n          // Verify that we have 5 checks with serviceID bcl-commit-hub\n          const chkList = Object.keys(res);\n          assert.equal(chkList.length, 5);\n          assert.equal(res['service:bcl-commit-hub:3'].Status, 'passing');\n          assert.equal(res['service:bcl-commit-hub:4'].Status, 'warning');\n          assert.equal(res['service:bcl-commit-hub:5'].Status, 'critical');\n          // await persistToFile('api_agent_check_list_3.json', res);\n        });\n      }); // End of Checks Pt 1\n    }); // End of Agent Pt 1\n    describe('## KV Store Pt 1', () => {\n      // K/V Paths\n      // projects/commit-hub/crust-2/\n      // projects/commit-hub/crust-2/nodes/ap-southeast-1/block-height\n      // projects/commit-hub/crust-2/nodes/ap-southeast-1/block-time\n      // projects/commit-hub/crust-2/nodes/ap-southeast-1/peers-total\n      // projects/commit-hub/crust-2/nodes/ap-southeast-1/peers-inbound\n      // projects/commit-hub/crust-2/nodes/ap-southeast-1/peers-outbound\n      // projects/commit-hub/crust-2/nodes/ap-southeast-1/query-response-time\n      // projects/commit-hub/crust-2/commits/100/swstest19\n      it('should list k/v at path projects/commit-hub/crust-2/', async () => {\n        // Expect 404 Error\n        try {\n          await api.kv.list('projects/commit-hub/crust-2/');\n          assert.fail();\n        } catch (e) {\n          assert.equal(e instanceof Error, true);\n          assert.equal(e.statusCode, 404);\n        }\n      });\n      it('should set k/v at path projects/commit-hub/crust-2/nodes/ap-southeast-1/block-height', async () => {\n        // Returns a boolean: true | false\n        // StatusCode 200\n        const res = await api.kv.upsert('projects/commit-hub/crust-2/nodes/ap-southeast-1/block-height', 100, { cas: 0 });\n        assert.equal(res, true);\n      });\n      it('should get k/v at path projects/commit-hub/crust-2/nodes/ap-southeast-1/block-height', async () => {\n        const res = await api.kv.get('projects/commit-hub/crust-2/nodes/ap-southeast-1/block-height');\n        assert.equal(res.length, 1);\n        const [k] = res;\n        assert.equal(k.Key, 'projects/commit-hub/crust-2/nodes/ap-southeast-1/block-height');\n        const b = Buffer.from(k.Value, 'base64');\n        const v = JSON.parse(b.toString('utf-8'));\n        assert.equal(v, '100');\n        // await persistToFile('api_kv_node_block_height.json', res);\n      });\n\n      it('should set k/v at path projects/commit-hub/crust-2/nodes/ap-southeast-1/block-time', async () => {\n        // Returns a boolean: true | false\n        // StatusCode 200\n        const res = await api.kv.upsert('projects/commit-hub/crust-2/nodes/ap-southeast-1/block-time', 1566884093, { cas: 0 });\n        assert.equal(res, true);\n      });\n      it('should get k/v at path projects/commit-hub/crust-2/nodes/ap-southeast-1/block-time', async () => {\n        const res = await api.kv.get('projects/commit-hub/crust-2/nodes/ap-southeast-1/block-time');\n        assert.equal(res.length, 1);\n        const [k] = res;\n        assert.equal(k.Key, 'projects/commit-hub/crust-2/nodes/ap-southeast-1/block-time');\n        const b = Buffer.from(k.Value, 'base64');\n        const v = JSON.parse(b.toString('utf-8'));\n        assert.equal(v, '1566884093');\n        // await persistToFile('api_kv_node_block_time.json', res);\n      });\n\n      it('should set k/v at path projects/commit-hub/crust-2/commits/1000/<stakewithus address>', async () => {\n        // Returns a boolean: true | false\n        // StatusCode 200\n        const res = await api.kv.upsert('projects/commit-hub/crust-2/commits/1000/swstest19', true, { cas: 0 });\n        assert.equal(res, true);\n      });\n      it('should get k/v at path projects/commit-hub/crust-2/commits/1000/<stakewithus address>', async () => {\n        const res = await api.kv.get('projects/commit-hub/crust-2/commits/1000/swstest19');\n        assert.equal(res.length, 1);\n        const [k] = res;\n        assert.equal(k.Key, 'projects/commit-hub/crust-2/commits/1000/swstest19');\n        const b = Buffer.from(k.Value, 'base64');\n        const v = JSON.parse(b.toString('utf-8'));\n        assert.equal(v, 'true');\n        // await persistToFile('api_kv_commit_block_validator.json', res);\n      });\n      it('should list k/v at path projects/commit-hub/crust-2/', async () => {\n        const res = await api.kv.list('projects/commit-hub/crust-2/');\n        const expected = [\n          'projects/commit-hub/crust-2/commits/1000/swstest19',\n          'projects/commit-hub/crust-2/nodes/ap-southeast-1/block-height',\n          'projects/commit-hub/crust-2/nodes/ap-southeast-1/block-time',\n        ];\n        assert.deepEqual(res, expected);\n        // await persistToFile('api_kv_project_level.json', res);\n      });\n      it('should delete k/v at path projects/commit-hub/crust-2/', async () => {\n        // Returns a boolean: true | false\n        // StatusCode 200\n        const res = await api.kv.del('projects/commit-hub/crust-2/', { recurse: true });\n        assert.equal(res, true);\n      });\n    }); // End of Agent Pt 1\n    describe('## Agent Pt 2', () => {\n      describe('## Services Pt 2', () => {\n        /*\n        it('should get health of service on agent', async () => {\n          assert.throws('Not implemented');\n        });\n        */\n        it('should deregister service on agent', async () => {\n        // Returns a blank string on success\n        // StatusCode 200\n          const res = await api.agent.service.destroy('bcl-commit-hub');\n          assert.equal(res, '');\n        });\n      }); // End of Services Pt 2\n    }); // End of Agent Pt 2\n  }); // End of Consul API\n});\n"]}