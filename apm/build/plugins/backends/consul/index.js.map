{"version":3,"sources":["../../../../src/plugins/backends/consul/index.js"],"names":["logger","child","module","tendermintServiceMapper","nodeIP","job","projectName","nodeResourceAlloc","desiredPorts","httpP2P","http_p2p","httpRPC","http_rpc","svcName","httpRPCAlive","Name","Notes","HTTP","Method","Interval","ServiceID","Status","httpP2PAlive","TCP","tmMissedBlocks","TTL","tmLateBlock","tmPeerCount","svcDef","ID","Address","Port","Meta","Checks","AgentServiceAPI","reqPartial","list","async","upsert","serviceDef","body","health","serviceId","destroy","AgentCheckAPI","checkId","ttlPass","ttlWarn","ttlFail","AgentAPI","service","check","CatalogAPI","listNode","KVAPI","keyPath","get","value","keyOpts","kOpts","cas","qs","remove","Client","nodePort","reqArgs","agent","catalog","kv","Mesh","jobLayout","client","serviceLayouts","map","nodeProjectCategory","nodeProject","details","createService","svcLayout","info","console","log","res","httpErr","error","destroyCheck","chkId","destroyRes","destroyService","svcId","allChecks","serviceChecks","reduce","acc","chkID","chk","concat","destroyCheckRes","all","sync","updateNow","rawSvc","currentSvcList","newServiceList","layout","indexOf","layoutIDs","destroyServiceList","currentSvcID","currentSvc","length","createRes","procHealthStatus","rawHealth","AggregatedStatus","Service","svcID","region","checkList","CheckID","Output","svcStatus","chkName","chkStatus","chkOutput","svcRegion","svcAddress","getHealthStatus","healthRes","filterSvc","healthResList","healthRow"],"mappings":"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","file":"index.js","sourcesContent":["import pino from 'pino';\nimport rawRequest from '../../../common/http_client';\n\nconst logger = pino().child({ module: 'plugin/backend/consul' });\n\nconst tendermintServiceMapper = (nodeIP) => (job) => {\n  const {\n    projectName,\n    nodeResourceAlloc,\n    // desiredAvail,\n  } = job;\n  const {\n    desiredPorts: {\n      http_p2p: httpP2P,\n      http_rpc: httpRPC,\n    },\n  } = nodeResourceAlloc;\n  // Register all the checks\n  const svcName = `bcl-${projectName}`;\n  // Basic Checks\n  const httpRPCAlive = {\n    Name: 'http-rpc-alive',\n    Notes: 'Checks that Tendermint RPC Server is running',\n    HTTP: `http://${nodeIP}:${httpRPC}/status`,\n    Method: 'GET',\n    Interval: '3s',\n    ServiceID: svcName,\n    Status: 'critical',\n  };\n\n  const httpP2PAlive = {\n    Name: 'http-p2p-alive',\n    Notes: 'Checks that Tendermint P2P Server is running',\n    TCP: `${nodeIP}:${httpP2P}`,\n    Interval: '3s',\n    ServiceID: svcName,\n    Status: 'critical',\n  };\n  // Advanced Checks\n  const tmMissedBlocks = {\n    Name: 'tm-missed-blocks',\n    Notes: 'Tally for monitoring missed blocks threshold',\n    TTL: '5s',\n    ServiceID: svcName,\n    Status: 'critical',\n  };\n  const tmLateBlock = {\n    Name: 'tm-late-block-time',\n    Notes: 'Tally for late block time threshold',\n    TTL: '5s',\n    ServiceID: svcName,\n    Status: 'critical',\n  };\n  const tmPeerCount = {\n    Name: 'tm-peer-count',\n    Notes: 'Tally for peer count threshold',\n    TTL: '5s',\n    ServiceID: svcName,\n    Status: 'critical',\n  };\n  // Sample Service Definition / Payload\n  const svcDef = {\n    ID: svcName,\n    Name: svcName,\n    Address: nodeIP, // Set to the local agent's address\n    Port: httpP2P,\n    Meta: {\n      'node-project': 'blockchain-client',\n    },\n    Checks: [\n      httpRPCAlive,\n      httpP2PAlive,\n      tmMissedBlocks,\n      tmLateBlock,\n      tmPeerCount,\n    ],\n  };\n  return svcDef;\n};\n\n\nconst AgentServiceAPI = (reqPartial) => {\n  const list = (async) => reqPartial('/v1/agent/services', 'GET')({ });\n\n  const upsert = async (serviceDef) => reqPartial('/v1/agent/service/register', 'PUT')({ body: serviceDef });\n\n  const health = async (serviceId) => reqPartial(`/v1/agent/health/service/id/${serviceId}`, 'GET')({});\n\n  const destroy = async (serviceId) => reqPartial(`/v1/agent/service/deregister/${serviceId}`, 'PUT')({ });\n  return {\n    list,\n    upsert,\n    health,\n    destroy,\n  };\n};\n\nconst AgentCheckAPI = (reqPartial) => {\n  const list = (async) => reqPartial('/v1/agent/checks', 'GET')({ });\n\n  const destroy = async (checkId) => reqPartial(`/v1/agent/check/deregister/${checkId}`, 'PUT')({ });\n\n  const ttlPass = async (checkId) => reqPartial(`/v1/agent/check/pass/${checkId}`, 'PUT')({ });\n\n  const ttlWarn = async (checkId) => reqPartial(`/v1/agent/check/warn/${checkId}`, 'PUT')({ });\n\n  const ttlFail = async (checkId) => reqPartial(`/v1/agent/check/fail/${checkId}`, 'PUT')({ });\n\n  return {\n    list,\n    destroy,\n    ttlPass,\n    ttlWarn,\n    ttlFail,\n  };\n};\n\n// TODO Reserved for future agent interactions\nconst AgentAPI = (reqPartial) => ({\n  service: AgentServiceAPI(reqPartial),\n  check: AgentCheckAPI(reqPartial),\n});\nconst CatalogAPI = (reqPartial) => {\n  const listNode = (async) => reqPartial('/v1/catalog/nodes', 'GET')({});\n\n  return {\n    listNode,\n  };\n};\n\nconst KVAPI = (reqPartial) => {\n  const list = async (keyPath) => reqPartial(`/v1/kv/${keyPath}`, 'GET')({ });\n\n  const get = async (keyPath) => reqPartial(`/v1/kv/${keyPath}`, 'GET')({ });\n\n  const upsert = async (keyPath, value, keyOpts) => {\n    const kOpts = {\n      cas: 1,\n      ...keyOpts,\n    };\n    return reqPartial(`/v1/kv/${keyPath}`, 'PUT')({ qs: kOpts });\n  };\n\n  const remove = async (keyPath) => reqPartial(`/v1/kv/${keyPath}`, 'DELETE')({});\n  return {\n    list,\n    get,\n    upsert,\n    remove,\n  };\n};\n// Update K/V\n// await client.kv.upsert('bcl-commit-hub/crust-2/ap-southeast-1/900000/B1927',1, {});\n\nconst Client = (nodeIP, nodePort, reqArgs = {}) => {\n  const reqPartial = rawRequest(nodeIP, nodePort, reqArgs);\n  return {\n    agent: { ...AgentAPI(reqPartial) },\n    catalog: { ...CatalogAPI(reqPartial) },\n    kv: { ...KVAPI(reqPartial) },\n  };\n};\n\nconst Mesh = (nodeIP, nodePort = 8500) => (jobLayout) => {\n  const client = Client(nodeIP, nodePort, {});\n\n  const serviceLayouts = jobLayout.map((job) => {\n    const {\n      nodeProjectCategory,\n      nodeProject,\n      ...details\n    } = job;\n    if (nodeProject === 'blockchain-client') {\n      //\n      if (nodeProjectCategory === 'tendermint') {\n        //\n        return tendermintServiceMapper(nodeIP)(details);\n      }\n    }\n    return [];\n  });\n\n  const createService = async (svcLayout) => {\n    try {\n      logger.info('Attempting to create new service...');\n      console.log(JSON.stringify(svcLayout, null, 2));\n      const res = await client.agent.service.upsert(svcLayout);\n      return res;\n    } catch (httpErr) {\n      logger.error('Http Error when creating new service');\n      return 0;\n    }\n  };\n  const destroyCheck = async (chkId) => {\n    try {\n      //\n      const destroyRes = await client.agent.check.destroy(chkId);\n      return destroyRes;\n    } catch (httpErr) {\n      logger.error('destroyCheck caught exception');\n      console.log(httpErr);\n      return 0;\n    }\n  };\n\n  const destroyService = async (svcId) => {\n    // Destroy the service itself\n    let destroyRes = {};\n    try {\n      destroyRes = await client.agent.service.destroy(svcId);\n    } catch (httpErr) {\n      logger.error('destroyRes caught exception');\n      console.log(httpErr);\n      return 0;\n    }\n    // Destroy related checks\n    const allChecks = await client.agent.check.list();\n    const serviceChecks = Object.keys(allChecks).reduce((acc, chkID) => {\n      const chk = allChecks[chkID];\n      const {\n        ServiceID,\n      } = chk;\n      if (ServiceID !== svcId) return acc;\n      return acc.concat(chkID);\n    }, []);\n    const destroyCheckRes = await Promise.all(serviceChecks.map(destroyCheck));\n    return {\n      destroyRes,\n      destroyCheckRes,\n    };\n  };\n\n  const sync = async (updateNow = false) => {\n    logger.info('Syncing Service Mesh');\n    // Based on the jobLayout, produce a desired service definition\n    const rawSvc = await client.agent.service.list();\n    const currentSvcList = Object.keys(rawSvc);\n    const newServiceList = serviceLayouts.reduce((acc, layout) => {\n      const { ID } = layout;\n      if (currentSvcList.indexOf(ID) === -1) return acc.concat(layout);\n      return acc;\n    }, []);\n    const layoutIDs = serviceLayouts.reduce((acc, { ID }) => acc.concat(ID), []);\n    const destroyServiceList = currentSvcList.reduce((acc, currentSvcID) => {\n      const currentSvc = rawSvc[currentSvcID];\n      const {\n        ID,\n        Meta: {\n          'node-project': nodeProject,\n        },\n      } = currentSvc;\n      if (typeof nodeProject === 'undefined') return acc;\n      if (nodeProject !== 'blockchain-client') return acc;\n      if (layoutIDs.indexOf(ID) !== -1) return acc;\n      return acc.concat(ID);\n    }, []);\n    logger.info(`New Service Length: ${newServiceList.length}`);\n    if (newServiceList.length > 0) {\n      // Find the service definition and create it\n      const createRes = await Promise.all(newServiceList.map(createService));\n      console.log('createRes');\n      console.log(createRes);\n    }\n    logger.info(`Destroy Service Length: ${destroyServiceList.length}`);\n    // TODO Write logic for deleting old services as well\n    if (destroyServiceList.length > 0) {\n      const destroyRes = await Promise.all(destroyServiceList.map(destroyService));\n      console.log('destroyRes');\n      console.log(destroyRes);\n    }\n  };\n\n  const procHealthStatus = (rawHealth) => {\n    const {\n      AggregatedStatus,\n      Service: {\n        ID: svcID,\n        Meta: {\n          region,\n        },\n        Address,\n      },\n      Checks,\n    } = rawHealth;\n    const checkList = Checks.reduce((acc, chk) => {\n      const {\n        CheckID,\n        Name,\n        Status,\n        Output,\n      } = chk;\n      return acc.concat({\n        svcStatus: AggregatedStatus,\n        svcID,\n        chkID: CheckID,\n        chkName: Name,\n        chkStatus: Status,\n        chkOutput: Output,\n        svcRegion: region,\n        svcAddress: Address,\n      });\n    }, []);\n    return checkList;\n  };\n  const getHealthStatus = async (svcID) => {\n    try {\n      const rawHealth = await client.agent.service.health(svcID);\n      const healthRes = procHealthStatus(rawHealth);\n      return healthRes;\n    } catch (httpErr) {\n      logger.error('getHealthStatus got HttpError');\n      console.log(httpErr);\n      return [];\n    }\n  };\n  const health = async () => {\n    const rawSvc = await client.agent.service.list();\n    const currentSvcList = Object.keys(rawSvc);\n    // Filter out those without the Meta:node-project tag\n    const filterSvc = currentSvcList.reduce((acc, svcID) => {\n      const { Meta: { 'node-project': nodeProject } } = rawSvc[svcID];\n      if (typeof nodeProject === 'undefined') return acc;\n      if (nodeProject !== 'blockchain-client') return acc;\n      return acc.concat(svcID);\n    }, []);\n    const healthResList = await Promise.all(filterSvc.map(getHealthStatus));\n    const healthRes = healthResList.reduce((acc, healthRow) => acc.concat([...healthRow]), []);\n    return healthRes;\n  };\n  return {\n    sync,\n    health,\n  };\n};\n\nexport {\n  Client,\n  Mesh,\n};\n"]}