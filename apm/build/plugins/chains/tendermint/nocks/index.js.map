{"version":3,"sources":["../../../../../src/plugins/chains/tendermint/nocks/index.js"],"names":["Bluebird","promisifyAll","fs","getFileContent","fPath","fName","rawData","readFileAsync","path","join","fData","JSON","parse","split","kName","TendermintApi","host","port","__dirname","fileList","readdirAsync","pList","all","map","tendermintApi","reduce","acc","row","apmBlock","apm_block","apmStatus","apm_status","apmNetInfo","apm_net_info","baseUrl","get","reply"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEAA,mBAASC,YAAT,CAAsBC,YAAtB;;AAEA,IAAMC,iBAAiB,SAAjBA,cAAiB,CAACC,KAAD;AAAA,SAAW,gBAAOC,KAAP,EAAiB;AACjD,QAAMC,UAAU,MAAMJ,aAAGK,aAAH,CAAiBC,eAAKC,IAAL,CAAUL,KAAV,EAAiBC,KAAjB,CAAjB,CAAtB;AACA,QAAMK,QAAQC,KAAKC,KAAL,CAAWN,OAAX,CAAd;;AAFiD,uBAG5BD,MAAMQ,KAAN,CAAY,OAAZ,CAH4B;AAAA,QAGtCC,KAHsC,gBAGzC,CAHyC;;AAIjD,6CAAUA,KAAV,EAAkBJ,KAAlB;AACD,GALsB;AAAA,CAAvB;;AAOA,IAAMK,gBAAgB,eAAhBA,aAAgB,CAAOC,IAAP,EAAaC,IAAb,EAAsB;AAC1C,MAAMb,QAAQI,eAAKC,IAAL,CAAUS,SAAV,EAAqB,KAArB,EAA4B,UAA5B,CAAd;AACA,MAAMC,WAAW,MAAMjB,aAAGkB,YAAH,CAAgBhB,KAAhB,CAAvB;AACA,MAAMiB,QAAQ,MAAM,kBAAQC,GAAR,CAAYH,SAASI,GAAT,CAAapB,eAAeC,KAAf,CAAb,CAAZ,CAApB;AACA,MAAMoB,gBAAgBH,MAAMI,MAAN,CAAa,UAACC,GAAD,EAAMC,GAAN;AAAA,sCAAoBA,GAApB,EAA4BD,GAA5B;AAAA,GAAb,EAAiD,EAAjD,CAAtB;AAJ0C,MAM7BE,QAN6B,GAStCJ,aATsC,CAMxCK,SANwC;AAAA,MAO5BC,SAP4B,GAStCN,aATsC,CAOxCO,UAPwC;AAAA,MAQ1BC,UAR0B,GAStCR,aATsC,CAQxCS,YARwC;;AAU1C,MAAMC,sBAAoBlB,IAApB,SAA4BC,IAAlC;AACA,sBAAKiB,OAAL,EAAcC,GAAd,CAAkB,SAAlB,EAA6BC,KAA7B,CAAmC,GAAnC,EAAwCN,SAAxC;AACA,sBAAKI,OAAL,EAAcC,GAAd,CAAkB,WAAlB,EAA+BC,KAA/B,CAAqC,GAArC,EAA0CJ,UAA1C;AACA,sBAAKE,OAAL,EAAcC,GAAd,CAAkB,sBAAlB,EAA0CC,KAA1C,CAAgD,GAAhD,EAAqDR,QAArD;AACD,CAdD;;kBAgBeb,a","file":"index.js","sourcesContent":["import Bluebird from 'bluebird';\nimport fs from 'fs';\nimport path from 'path';\nimport nock from 'nock';\n\nBluebird.promisifyAll(fs);\n\nconst getFileContent = (fPath) => async (fName) => {\n  const rawData = await fs.readFileAsync(path.join(fPath, fName));\n  const fData = JSON.parse(rawData);\n  const { 0: kName } = fName.split('.json');\n  return { [kName]: fData };\n};\n\nconst TendermintApi = async (host, port) => {\n  const fPath = path.join(__dirname, '../', 'fixtures');\n  const fileList = await fs.readdirAsync(fPath);\n  const pList = await Promise.all(fileList.map(getFileContent(fPath)));\n  const tendermintApi = pList.reduce((acc, row) => ({ ...row, ...acc }), {});\n  const {\n    apm_block: apmBlock,\n    apm_status: apmStatus,\n    apm_net_info: apmNetInfo,\n  } = tendermintApi;\n  const baseUrl = `http://${host}:${port}`;\n  nock(baseUrl).get('/status').reply(200, apmStatus);\n  nock(baseUrl).get('/net_info').reply(200, apmNetInfo);\n  nock(baseUrl).get('/block?height=958446').reply(200, apmBlock);\n};\n\nexport default TendermintApi;\n"]}