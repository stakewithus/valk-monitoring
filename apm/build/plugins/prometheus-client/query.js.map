{"version":3,"sources":["../../../src/plugins/prometheus-client/query.js"],"names":["Bluebird","promisifyAll","request","query","start","end","step","response","getAsync","process","env","PROMETHEUS_API_URL","qs","data","JSON","parse","body"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEAA,mBAASC,YAAT,CAAsBC,iBAAtB;;AAEA,IAAMC,QAAQ,2BAER;AAAA,MADJA,KACI,QADJA,KACI;AAAA,MADGC,KACH,QADGA,KACH;AAAA,MADUC,GACV,QADUA,GACV;AAAA,uBADeC,IACf;AAAA,MADeA,IACf,6BADsB,KACtB;;AACJ,MAAMC,WAAW,MAAML,kBAAQM,QAAR,CAAoBC,QAAQC,GAAR,CAAYC,kBAAhC,mBAAkE;AACvFC,QAAI;AACFT,kBADE,EACKC,YADL,EACYC,QADZ,EACiBC;AADjB;AADmF,GAAlE,CAAvB;AAKA,MAAMO,OAAOC,KAAKC,KAAL,CAAWR,SAASS,IAApB,CAAb;AACA,SAAOH,IAAP;AACD,CAVD;;kBAYeV,K","file":"query.js","sourcesContent":["import Bluebird from 'bluebird';\nimport request from 'request';\n\nBluebird.promisifyAll(request);\n\nconst query = async ({\n  query, start, end, step = '15s',\n}) => {\n  const response = await request.getAsync(`${process.env.PROMETHEUS_API_URL}/query_range`, {\n    qs: {\n      query, start, end, step,\n    },\n  });\n  const data = JSON.parse(response.body);\n  return data;\n};\n\nexport default query;\n"]}