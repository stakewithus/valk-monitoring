{"version":3,"sources":["../../src/monit/influx-store.spec.js"],"names":["blockCommits","height","time","Date","valueOf","missed","describe","host","db","measurement","project","network","query","before","exec","it","ret","assert","deepStrictEqual","from","subtract","to","length","startOf","endOf"],"mappings":";;AAAA;;AAGA;;;;AACA;;AAGA;;;;AAOA,IAAMA,eAAe,CAAC;AACpBC,UAAQ,OADY;AAEpBC,QAAM,IAAIC,IAAJ,GAAWC,OAAX,EAFc;AAGpBC,UAAQ;AAHY,CAAD,CAArB;;AAMAC,SAAS,0CAAT,EAAqD,YAAM;AACzD,MAAMC,OAAO,uBAAb;AACA,MAAMC,KAAK,KAAX;AACA,MAAMC,cAAc,eAApB;AACA,MAAMC,UAAU,MAAhB;AACA,MAAMC,UAAU,mBAAhB;AACA,MAAMC,QAAQ,2BAAM;AAClBL;AADkB,GAAN,CAAd;AAGAM,SAAO;AAAA,WAAYD,MAAMJ,EAAN,EAAUM,IAAV,CAAe;AAChCF,gCAAwBJ,EAAxB,yBAA8CA;AADd,KAAf,CAAZ;AAAA,GAAP;;AAIAF,WAAS,oBAAT,EAA+B,YAAM;AACnCO,WAAO;AAAA,aAAYD,MAAMJ,EAAN,EAAUM,IAAV,CAAe;AAChCF,gCAAsBH;AADU,OAAf,CAAZ;AAAA,KAAP;;AAIAM,OAAG,WAAH,EAAgB,kBAAY;AAC1B,UAAMC,MAAM,MAAM,mCAAiB;AACjCT,kBADiC;AAEjCI,wBAFiC;AAGjCD,wBAHiC;AAIjCV;AAJiC,OAAjB,CAAlB;AAMAiB,mBAAOC,eAAP,CAAuBF,GAAvB,EAA4B,IAA5B;AACD,KARD;AASD,GAdD;;AAgBAV,WAAS,kCAAT,EAA6C,YAAM;AACjDS,OAAG,WAAH,EAAgB,kBAAY;AAC1B,UAAMC,MAAM,MAAM,2CAAyB;AACzCT,kBADyC;AAEzCI,wBAFyC;AAGzCD;AAHyC,OAAzB,CAAlB;AAKAO,mBAAOC,eAAP,CAAuBF,GAAvB,EAA4B,CAA5B;AACD,KAPD;AAQD,GATD;;AAWAV,WAAS,mDAAT,EAA8D,YAAM;AAClES,OAAG,WAAH,EAAgB,kBAAY;AAC1B,UAAMC,MAAM,MAAM,yCAAuB;AACvCT,kBADuC;AAEvCI,wBAFuC;AAGvCD,wBAHuC;AAIvCS,cAAM,wBAASC,QAAT,CAAkB,EAAlB,EAAsB,GAAtB,EAA2BhB,OAA3B,KAAuC,GAJN;AAKvCiB,YAAI,wBAASjB,OAAT,KAAqB;AALc,OAAvB,CAAlB;AAOAa,mBAAOC,eAAP,CAAuBF,IAAIM,MAA3B,EAAmC,EAAnC;AACD,KATD;AAUD,GAXD;;AAaAhB,WAAS,wDAAT,EAAmE,YAAM;AACvES,OAAG,WAAH,EAAgB,kBAAY;AAC1B,UAAMC,MAAM,MAAM,6CAA2B;AAC3CT,kBAD2C;AAE3CI,wBAF2C;AAG3CD,wBAH2C;AAI3CS,cAAM,wBAASC,QAAT,CAAkB,EAAlB,EAAsB,GAAtB,EAA2BG,OAA3B,CAAmC,GAAnC,EAAwCnB,OAAxC,KAAoD,GAJf;AAK3CiB,YAAI,wBAASG,KAAT,CAAe,GAAf,EAAoBpB,OAApB,KAAgC;AALO,OAA3B,CAAlB;AAOAa,mBAAOC,eAAP,CAAuBF,IAAIM,MAA3B,EAAmC,KAAK,EAAxC;AACD,KATD;AAUD,GAXD;AAYD,CAjED","file":"influx-store.spec.js","sourcesContent":["import {\n  assert,\n} from 'chai';\nimport moment from 'moment';\nimport {\n  Query,\n} from '../plugins/influxdb-client';\nimport {\n  saveBlockCommits,\n  getMissedBlocksByTimeOfDay,\n  getMissedBlocksHistory,\n  getTotalMissedBlockCount,\n} from './influx-store';\n\nconst blockCommits = [{\n  height: 1234456,\n  time: new Date().valueOf(),\n  missed: true,\n}];\n\ndescribe('Read and write block commits to influxdb', () => {\n  const host = 'http://127.0.0.1:8086';\n  const db = 'apm';\n  const measurement = 'block_commits';\n  const project = 'kava';\n  const network = 'kava-testnet-2000';\n  const query = Query({\n    host,\n  });\n  before(async () => query(db).exec({\n    query: `DROP DATABASE ${db};CREATE DATABASE ${db}`,\n  }));\n\n  describe('Save block commits', () => {\n    before(async () => query(db).exec({\n      query: `DELETE FROM ${measurement}`,\n    }));\n\n    it('Should ok', async () => {\n      const ret = await saveBlockCommits({\n        host,\n        network,\n        project,\n        blockCommits,\n      });\n      assert.deepStrictEqual(ret, true);\n    });\n  });\n\n  describe('Get total count of missed blocks', () => {\n    it('Should ok', async () => {\n      const ret = await getTotalMissedBlockCount({\n        host,\n        network,\n        project,\n      });\n      assert.deepStrictEqual(ret, 1);\n    });\n  });\n\n  describe('Get history of missed blocks for the last 14 days', () => {\n    it('Should ok', async () => {\n      const ret = await getMissedBlocksHistory({\n        host,\n        network,\n        project,\n        from: moment().subtract(13, 'd').valueOf() * 1e6,\n        to: moment().valueOf() * 1e6,\n      });\n      assert.deepStrictEqual(ret.length, 14);\n    });\n  });\n\n  describe('Get missed blocks by time of days for the last 14 days', () => {\n    it('Should ok', async () => {\n      const ret = await getMissedBlocksByTimeOfDay({\n        host,\n        network,\n        project,\n        from: moment().subtract(13, 'd').startOf('d').valueOf() * 1e6,\n        to: moment().endOf('d').valueOf() * 1e6,\n      });\n      assert.deepStrictEqual(ret.length, 14 * 24);\n    });\n  });\n});\n"]}