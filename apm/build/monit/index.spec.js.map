{"version":3,"sources":["../../src/monit/index.spec.js"],"names":["Bluebird","promisifyAll","fs","time","Math","floor","Date","now","nockMoreConsulAPI","host","port","baseUri","MockContents","TestUtil","getFolderContent","put","reply","query","cas","delete","note","get","BlockHeight","times","nockMoreTendermintApi","height","Block958445","nockSlackCall","post","nockInfluxDbRequest","dbName","precision","blockCommits","measurement","tags","network","project","fields","block_height","missed","timestamp","healthChecks","nodeId","region","type","Constant","CHECK_NAMES","TM_PEER_COUNT","status","check_id","block_time","TM_LATE_BLOCK_TIME","TM_MISSED_BLOCK","peerCounts","inbound","outbound","total","startOf","valueOf","blockHeights","db","forEach","hc","describe","before","process","env","SLACK_INCOMING_WEBHOOK","sinon","stub","Twilio","returns","resolve","beforeEach","slackSpy","spy","Notification","twilioSpy","expected","ip","checkId","prevStatus","response","peers","it","Monit","run","node","consulPort","nomadPort","config","prodConfigFile","assert","deepEqual","equal","calledOnce","production","isNull"],"mappings":"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","file":"index.spec.js","sourcesContent":["import {\n  assert,\n} from 'chai';\nimport Bluebird from 'bluebird';\nimport fs from 'fs';\nimport nock from 'nock';\nimport sinon from 'sinon';\nimport moment from 'moment';\nimport TestUtil from '../common/test-util';\nimport NockConsulAPI from '../plugins/backends/consul2/nocks/api';\nimport NockNomadAPI from '../plugins/schedulers/nomad2/nocks/api';\nimport NockTendermintAPI from '../plugins/chains/tendermint/nocks';\n\nimport {\n  parse,\n} from '../plugins/influxdb-client/line-protocol';\nimport Monit from './index';\nimport Notification from '../notification';\nimport Twilio from '../notification/twilio';\nimport Constant from './constant';\n\nBluebird.promisifyAll(fs);\nconst time = Math.floor(Date.now() / 1000) - 1565928376;\nconst nockMoreConsulAPI = async (host, port) => {\n  const baseUri = `http://${host}:${port}`;\n  const MockContents = await TestUtil.getFolderContent('monit/fixtures');\n  nock(baseUri)\n    .put('/v1/kv/projects/nodes/bcl-commit-hub/unknown/ap-southeast-1a/status/block-height')\n    .reply(200, true);\n  nock(baseUri)\n    .put('/v1/kv/projects/nodes/bcl-commit-hub/unknown/ap-southeast-1a/status/block-time')\n    .reply(200, true);\n  nock(baseUri)\n    .put('/v1/kv/projects/nodes/bcl-commit-hub/unknown/ap-southeast-1a/status/peers-total')\n    .reply(200, true);\n  nock(baseUri)\n    .put('/v1/kv/projects/nodes/bcl-commit-hub/unknown/ap-southeast-1a/status/peers-inbound')\n    .reply(200, true);\n  nock(baseUri)\n    .put('/v1/kv/projects/nodes/bcl-commit-hub/unknown/ap-southeast-1a/status/peers-outbound')\n    .reply(200, true);\n  nock(baseUri)\n    .put('/v1/kv/projects/nodes/bcl-commit-hub/unknown/ap-southeast-1a/status/catching-up')\n    .reply(200, true);\n  nock(baseUri)\n    .put('/v1/kv/projects/global/bcl-commit-hub/unknown/status/block-height')\n    .reply(200, true);\n  nock(baseUri)\n    .put('/v1/kv/projects/global/bcl-commit-hub/unknown/status/block-time')\n    .reply(200, true);\n  nock(baseUri)\n    .put('/v1/kv/projects/global/bcl-commit-hub/unknown/status/peers-total')\n    .reply(200, true);\n  nock(baseUri)\n    .put('/v1/kv/projects/global/bcl-commit-hub/unknown/status/peers-inbound')\n    .reply(200, true);\n  nock(baseUri)\n    .put('/v1/kv/projects/global/bcl-commit-hub/unknown/status/peers-outbound')\n    .reply(200, true);\n  nock(baseUri)\n    .put('/v1/kv/projects/global/bcl-commit-hub/unknown/status/catching-up')\n    .reply(200, true);\n  nock(baseUri)\n    .put('/v1/kv/projects/global/bcl-commit-hub/unknown/commits/958445/EA741AD0F8A3B579781243D15A79E99B51F3B60E')\n    .query({\n      cas: 0,\n    })\n    .reply(200, true);\n  nock(baseUri)\n    .delete('/v1/kv/projects/global/bcl-commit-hub/unknown/commits/958245/EA741AD0F8A3B579781243D15A79E99B51F3B60E')\n    .reply(200, true);\n  nock(baseUri)\n    .put('/v1/agent/check/pass/service:bcl-commit-hub:3')\n    .query({\n      note: '',\n    })\n    .reply(200, '');\n  nock(baseUri)\n    .put('/v1/agent/check/fail/service:bcl-commit-hub:4')\n    .query({\n      note: `${time}s`,\n    })\n    .reply(200, '');\n  nock(baseUri)\n    .put('/v1/agent/check/fail/service:bcl-commit-hub:5')\n    .query({\n      note: '3peers',\n    })\n    .reply(200, '');\n  nock(baseUri)\n    .get('/v1/kv/projects/global/bcl-commit-hub/unknown/status/block-height')\n    .reply(200, MockContents.BlockHeight);\n  nock(baseUri)\n    .put('/v1/txn')\n    .times(10)\n    .reply(200, '');\n  nock(baseUri)\n    .get('/v1/kv/apm/settings/muted-nodes')\n    .times(2)\n    .reply(200, '');\n  nock(baseUri)\n    .get('/v1/kv/apm/settings/threshold/default')\n    .times(2)\n    .reply(200, '');\n  nock(baseUri)\n    .get('/v1/kv/apm/settings/threshold/custom')\n    .times(2)\n    .reply(200, '');\n  nock(baseUri)\n    .get('/v1/kv/apm/settings/validator-addresses')\n    .times(2)\n    .reply(200, '');\n  nock(baseUri)\n    .get('/v1/kv/projects/global/bcl-commit-hub/unknown/commits?keys=true')\n    .reply(200, [\n      'projects/global/bcl-commit-hub/unknown/commits/958214/EA741AD0F8A3B579781243D15A79E99B51F3B60E',\n      'projects/global/bcl-commit-hub/unknown/commits/958215/EA741AD0F8A3B579781243D15A79E99B51F3B60E',\n    ]);\n};\n\nconst nockMoreTendermintApi = async (host, port) => {\n  const baseUri = `http://${host}:${port}`;\n  const MockContents = await TestUtil.getFolderContent('monit/fixtures');\n  nock(baseUri)\n    .get('/block')\n    .query({\n      height: 958445,\n    })\n    .reply(200, MockContents.Block958445);\n};\n\nconst nockSlackCall = async () => {\n  nock('https://hooks.slack.com')\n    .post('/')\n    .times(2)\n    .reply(200, true);\n};\n\nconst nockInfluxDbRequest = async (host, port) => {\n  const baseUri = `http://${host}:${port}`;\n  const dbName = 'apm';\n  const precision = 'ms';\n  const blockCommits = [{\n    measurement: 'block_commits',\n    tags: {\n      network: 'unknown',\n      project: 'bcl-commit-hub',\n    },\n    fields: {\n      block_height: '\"958444\"',\n      missed: '\"false\"',\n    },\n    timestamp: 1565873240694,\n  },\n  {\n    measurement: 'block_commits',\n    tags: {\n      network: 'unknown',\n      project: 'bcl-commit-hub',\n    },\n    fields: {\n      block_height: '\"958445\"',\n      missed: '\"true\"',\n    },\n    timestamp: 1565928376000,\n  },\n  ];\n  const healthChecks = [\n    [{\n      measurement: 'health_checks',\n      tags: {\n        nodeId: '7314889b-0aeb-00e1-8b67-98de3ef8e4db',\n        region: 'ap-southeast-1a',\n        network: 'unknown',\n        project: 'bcl-commit-hub',\n        type: Constant.CHECK_NAMES.TM_PEER_COUNT,\n        status: 'CRITICAL',\n      },\n      fields: {\n        host: '\"127.0.0.1\"',\n        note: '\"3peers\"',\n        check_id: '\"service:bcl-commit-hub:5\"',\n        block_height: '\"958446\"',\n        block_time: '\"1565928376\"',\n      },\n    }],\n    [{\n      measurement: 'health_checks',\n      tags: {\n        nodeId: '7314889b-0aeb-00e1-8b67-98de3ef8e4db',\n        region: 'ap-southeast-1a',\n        network: 'unknown',\n        project: 'bcl-commit-hub',\n        type: Constant.CHECK_NAMES.TM_LATE_BLOCK_TIME,\n        status: 'CRITICAL',\n      },\n      fields: {\n        host: '\"127.0.0.1\"',\n        note: `\"${time}s\"`,\n        check_id: '\"service:bcl-commit-hub:4\"',\n        block_height: '\"958446\"',\n        block_time: '\"1565928376\"',\n      },\n    }],\n    [{\n      measurement: 'health_checks',\n      tags: {\n        nodeId: '7314889b-0aeb-00e1-8b67-98de3ef8e4db',\n        region: 'ap-southeast-1a',\n        network: 'unknown',\n        project: 'bcl-commit-hub',\n        type: Constant.CHECK_NAMES.TM_MISSED_BLOCK,\n        status: 'CRITICAL',\n      },\n      fields: {\n        host: '\"127.0.0.1\"',\n        note: '\"5\"',\n        check_id: '\"service:bcl-commit-hub:3\"',\n        block_height: '\"958446\"',\n        block_time: '\"1565928376\"',\n      },\n    }],\n  ];\n  const peerCounts = [{\n    measurement: 'peer_counts',\n    tags: {\n      network: 'unknown',\n      project: 'bcl-commit-hub',\n      region: 'ap-southeast-1a',\n    },\n    fields: {\n      inbound: '\"3\"',\n      outbound: '\"0\"',\n      total: '\"3\"',\n    },\n    timestamp: moment().startOf('h').valueOf(),\n  }];\n\n  const blockHeights = [{\n    measurement: 'block_heights',\n    tags: {\n      network: 'unknown',\n      project: 'bcl-commit-hub',\n      region: 'ap-southeast-1a',\n    },\n    fields: {\n      height: 958446,\n    },\n    timestamp: 1565928376000,\n  }];\n\n  // block commits\n  nock(baseUri)\n    .post('/write', parse(blockCommits))\n    .query({\n      db: dbName,\n      precision,\n    })\n    .reply(204, '');\n\n  // health checks\n  healthChecks.forEach((hc) => {\n    nock(baseUri)\n      .post('/write', parse(hc))\n      .query({\n        db: dbName,\n        precision,\n      })\n      .reply(204, '');\n  });\n\n  // peer counts\n  nock(baseUri)\n    .post('/write', parse(peerCounts))\n    .query({\n      db: dbName,\n      precision,\n    })\n    .reply(204, '');\n\n  // block heights\n  nock(baseUri)\n    .post('/write', parse(blockHeights))\n    .query({\n      db: dbName,\n      precision,\n    })\n    .reply(204, '');\n};\n\ndescribe('# Monit Command', () => {\n  before(() => {\n    process.env.SLACK_INCOMING_WEBHOOK = 'https://hooks.slack.com';\n    sinon.stub(Twilio, 'sendSMS').returns(Promise.resolve());\n    sinon.stub(Twilio, 'sendCall').returns(Promise.resolve());\n  });\n  beforeEach(async () => {\n    await NockConsulAPI('127.0.0.1', 8500);\n    await NockTendermintAPI('127.0.0.1', 46657);\n    await nockMoreConsulAPI('127.0.0.1', 8500);\n    await nockMoreTendermintApi('127.0.0.1', 46657);\n    await nockSlackCall();\n    await nockInfluxDbRequest('127.0.0.1', 8086);\n  });\n  describe('# Should run monit command with config file correctly', async () => {\n    const slackSpy = sinon.spy(Notification, 'sendToSlack');\n    const twilioSpy = sinon.spy(Notification, 'sendToTwilio');\n    const expected = [{\n      network: 'unknown',\n      project: 'commit-hub',\n      region: 'ap-southeast-1a',\n      ip: '127.0.0.1',\n      nodeId: '7314889b-0aeb-00e1-8b67-98de3ef8e4db',\n      healthChecks: {\n        'tm-late-block-time': {\n          checkId: 'service:bcl-commit-hub:4',\n          time,\n          note: `${time}s`,\n          status: 'CRITICAL',\n          prevStatus: 'WARNING',\n          response: '',\n        },\n        'tm-missed-blocks-StakeWithUs': {\n          checkId: 'service:bcl-commit-hub:3',\n          status: 'PASSING',\n          prevStatus: 'PASSING',\n          response: '',\n          note: '',\n        },\n        'tm-peer-count': {\n          peers: 3,\n          checkId: 'service:bcl-commit-hub:5',\n          status: 'CRITICAL',\n          prevStatus: 'CRITICAL',\n          note: '3peers',\n          response: '',\n        },\n      },\n    }];\n    it('should have correct response', async () => {\n      await NockNomadAPI('127.0.0.1', 4646);\n      const response = await Monit.run({\n        node: '127.0.0.1',\n        consulPort: 8500,\n        nomadPort: 4646,\n        config: 'config',\n        prodConfigFile: 'prod-config/config.json',\n      });\n      // console.dir(response, { depth: null });\n      assert.deepEqual(response, expected);\n      assert.equal(slackSpy.calledOnce, true);\n      assert.equal(twilioSpy.calledOnce, true);\n    });\n    it('should run command with production config file correctly', async () => {\n      const response = await Monit.run({\n        node: '127.0.0.1',\n        consulPort: 8500,\n        production: true,\n        prodConfigFile: 'prod-config/config.json',\n      });\n      assert.isNull(response);\n    });\n  });\n});\n"]}