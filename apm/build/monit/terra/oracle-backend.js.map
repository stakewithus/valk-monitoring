{"version":3,"sources":["../../../src/monit/terra/oracle-backend.js"],"names":["logger","child","module","CHECK_IDS","ORACLE_MISSING_VOTE","getKeyPrefix","process","env","TERRA_ORACLE_VALIDATOR_ADDRESS","getKey","vp","addCheck","bend","nodeServices","agent","service","list","svcName","Error","nodeChecks","check","missingVoteCheck","CheckID","Name","Notes","TTL","ServiceID","Status","register","healthCheck","getLastVotings","votingMisses","minVotingPeriod","lastVotings","filter","v","arrList","key","split","votingPeriod","length","map","value","sort","updateHealthCheck","Backend","checks","missed","checkId","info","status","criticalMisses","TERRA_ORACLE_CRITICAL","warningMisses","TERRA_ORACLE_WARNING","ttlFail","CONSTANT","HEALTH_CHECK_STATUS","CRITICAL","ttlWarn","WARNING","ttlPass","PASS","prevStatus","note","shouldAlerting","TERRA_ORACLE_DISABLE_ALERT","error","toUpperCase","removeOldKeys","removingVotingPeriod","removingKeys","KVStore","deleteMultipleKeys"],"mappings":"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","file":"oracle-backend.js","sourcesContent":["import pino from 'pino';\nimport KVStore from '../kv-store';\nimport CONSTANT from '../constant';\n\nconst logger = pino().child({ module: 'cmd/monit/tera/oracle-backend' });\nconst CHECK_IDS = {\n  ORACLE_MISSING_VOTE: 'oracle-terra-missing-vote',\n};\n\nconst getKeyPrefix = () => `backend/terra/oracle/${process.env.TERRA_ORACLE_VALIDATOR_ADDRESS}/miss/`;\n\nconst getKey = (vp) => `${getKeyPrefix()}${vp}`;\n\nconst addCheck = async (bend) => {\n  const nodeServices = await bend.agent.service.list();\n  const svcName = 'terra-backend';\n  if (!nodeServices[svcName]) {\n    throw new Error(`Service ${svcName} not found`);\n  }\n  const nodeChecks = await bend.agent.check.list();\n  if (nodeChecks[CHECK_IDS.ORACLE_MISSING_VOTE]) {\n    return null;\n  }\n  const missingVoteCheck = {\n    CheckID: CHECK_IDS.ORACLE_MISSING_VOTE,\n    Name: CHECK_IDS.ORACLE_MISSING_VOTE,\n    Notes: 'Checks that Oracle Backend does not miss any vote',\n    TTL: '20s',\n    ServiceID: svcName,\n    Status: 'critical',\n  };\n  return bend.agent.check.register(missingVoteCheck);\n};\n\nconst healthCheck = (nodeChecks) => nodeChecks[CHECK_IDS.ORACLE_MISSING_VOTE];\n\nconst getLastVotings = (votingMisses, minVotingPeriod) => {\n  const lastVotings = votingMisses.filter((v) => {\n    const arrList = v.key.split('/');\n    const votingPeriod = arrList[arrList.length - 1];\n    return votingPeriod > minVotingPeriod;\n  }).map((v) => +v.value);\n  lastVotings.sort();\n  return lastVotings;\n};\n\nconst updateHealthCheck = (Backend) => async (lastVotings, checks) => {\n  const missed = lastVotings[lastVotings.length - 1] - lastVotings[0];\n  const checkId = CHECK_IDS.ORACLE_MISSING_VOTE;\n  if (!checks[checkId]) {\n    logger.info('CHECKID_NOT_FOUND', checks, checkId);\n    return null;\n  }\n  let status = null;\n  const criticalMisses = +process.env.TERRA_ORACLE_CRITICAL || 5;\n  const warningMisses = +process.env.TERRA_ORACLE_WARNING || 1;\n  if (missed > criticalMisses) {\n    await Backend.agent.check.ttlFail(checkId, missed);\n    status = CONSTANT.HEALTH_CHECK_STATUS.CRITICAL;\n  } else if (missed > warningMisses) {\n    await Backend.agent.check.ttlWarn(checkId, missed);\n    status = CONSTANT.HEALTH_CHECK_STATUS.WARNING;\n  } else {\n    await Backend.agent.check.ttlPass(checkId);\n    status = CONSTANT.HEALTH_CHECK_STATUS.PASS;\n  }\n  return {\n    status,\n    prevStatus: checks[checkId].Status,\n    note: missed,\n  };\n};\n\nconst shouldAlerting = (status, prevStatus) => {\n  if (process.env.TERRA_ORACLE_DISABLE_ALERT == 1) {\n    return false;\n  }\n  if (!prevStatus) {\n    logger.error('shoudAlerting: prevStatus is undefined');\n  }\n  if (status === CONSTANT.HEALTH_CHECK_STATUS.PASS) {\n    return false;\n  }\n  return prevStatus && status && prevStatus.toUpperCase() !== status.toUpperCase();\n};\n\nconst removeOldKeys = (Backend) => (votingMisses, minVotingPeriod) => {\n  const removingVotingPeriod = votingMisses.map((v) => {\n    const arrList = v.key.split('/');\n    const votingPeriod = arrList[arrList.length - 1];\n    return +votingPeriod;\n  }).filter((vp) => vp < minVotingPeriod);\n  const removingKeys = removingVotingPeriod.map((vp) => getKey(vp));\n  return KVStore.deleteMultipleKeys(Backend)(removingKeys);\n};\n\nexport default {\n  getKey,\n  getKeyPrefix,\n  healthCheck,\n  addCheck,\n  updateHealthCheck,\n  removeOldKeys,\n  shouldAlerting,\n  getLastVotings,\n};\n"]}