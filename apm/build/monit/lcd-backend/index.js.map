{"version":3,"sources":["../../../src/monit/lcd-backend/index.js"],"names":["lcdStatus","getCheckId","project","host","port","addService","bend","nodeServices","agent","service","list","svcName","svcDef","ID","Name","upsert","addCheck","nodeChecks","check","lcdHttpCheck","CheckID","Notes","HTTP","Method","Interval","ServiceID","Status","register","healthCheck","shouldAlerting","failInARow","toUpperCase","CONSTANT","HEALTH_CHECK_STATUS","CRITICAL"],"mappings":";;;;;;AAAA;;;;;;AAEA,IAAMA,YAAY,EAAlB;;AAEA,IAAMC,aAAa,SAAbA,UAAa,CAACC,OAAD,EAAUC,IAAV,EAAgBC,IAAhB;AAAA,kBAAgCF,OAAhC,SAA2CC,IAA3C,SAAmDC,IAAnD;AAAA,CAAnB;;AAEA,IAAMC,aAAa,SAAbA,UAAa,CAACC,IAAD;AAAA,SAAU,gBAAOJ,OAAP,EAAgBC,IAAhB,EAAsBC,IAAtB,EAA+B;AAC1D,QAAMG,eAAe,MAAMD,KAAKE,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,EAA3B;AACA,QAAMC,UAAaT,OAAb,aAAN;AACA,QAAIK,aAAaI,OAAb,CAAJ,EAA2B;AACzB,aAAO,IAAP;AACD;AACD,QAAMC,SAAS;AACbC,UAAIF,OADS;AAEbG,YAAMH;AAFO,KAAf;AAIA,WAAOL,KAAKE,KAAL,CAAWC,OAAX,CAAmBM,MAAnB,CAA0BH,MAA1B,CAAP;AACD,GAXkB;AAAA,CAAnB;;AAaA,IAAMI,WAAW,SAAXA,QAAW,CAACV,IAAD;AAAA,SAAU,gBAAOJ,OAAP,EAAgBC,IAAhB,EAAsBC,IAAtB,EAA+B;AACxD,QAAMa,aAAa,MAAMX,KAAKE,KAAL,CAAWU,KAAX,CAAiBR,IAAjB,EAAzB;AACA,QAAIO,WAAWhB,WAAWC,OAAX,EAAoBC,IAApB,EAA0BC,IAA1B,CAAX,CAAJ,EAAiD;AAC/C,aAAO,IAAP;AACD;AACD,QAAMe,eAAe;AACnBC,eAASnB,WAAWC,OAAX,EAAoBC,IAApB,EAA0BC,IAA1B,CADU;AAEnBU,YAAMb,WAAWC,OAAX,EAAoBC,IAApB,EAA0BC,IAA1B,CAFa;AAGnBiB,aAAO,mCAHY;AAInBC,wBAAgBnB,IAAhB,SAAwBC,IAAxB,eAJmB;AAKnBmB,cAAQ,KALW;AAMnBC,gBAAU,IANS;AAOnBC,iBAAcvB,OAAd,aAPmB;AAQnBwB,cAAQ;AARW,KAArB;AAUA,WAAOpB,KAAKE,KAAL,CAAWU,KAAX,CAAiBS,QAAjB,CAA0BR,YAA1B,CAAP;AACD,GAhBgB;AAAA,CAAjB;;AAkBA,IAAMS,cAAc,SAAdA,WAAc,CAClBX,UADkB,EACNf,OADM,EACGC,IADH,EACSC,IADT;AAAA,SAEfa,WAAWhB,WAAWC,OAAX,EAAoBC,IAApB,EAA0BC,IAA1B,CAAX,CAFe;AAAA,CAApB;;AAIA,IAAMyB,iBAAiB,SAAjBA,cAAiB,CAACX,KAAD,EAAQhB,OAAR,EAAiBC,IAAjB,EAAuBC,IAAvB,EAAgC;AACrD,MAAI,CAACc,KAAD,IAAU,CAACA,MAAMQ,MAArB,EAA6B;AAC3B,WAAO,KAAP;AACD;AACD,MAAMI,aAAa9B,UAAUC,WAAWC,OAAX,EAAoBC,IAApB,EAA0BC,IAA1B,CAAV,CAAnB;AACA,MAAIc,MAAMQ,MAAN,CAAaK,WAAb,OAA+BC,mBAASC,mBAAT,CAA6BC,QAAhE,EAA0E;AACxElC,cAAUC,WAAWC,OAAX,EAAoBC,IAApB,EAA0BC,IAA1B,CAAV,IAA6C0B,aAAaA,aAAa,CAA1B,GAA8B,CAA3E;AACA,QAAIA,eAAe,CAAnB,EAAsB;AACpB,aAAO,IAAP;AACD;AACF,GALD,MAKO;AACL9B,cAAUC,WAAWC,OAAX,EAAoBC,IAApB,EAA0BC,IAA1B,CAAV,IAA6C,CAA7C;AACD;AACD,SAAO,KAAP;AACD,CAdD;;kBAgBe;AACbwB,0BADa;AAEbvB,wBAFa;AAGbW,oBAHa;AAIba,gCAJa;AAKb5B;AALa,C","file":"index.js","sourcesContent":["import CONSTANT from '../constant';\n\nconst lcdStatus = {};\n\nconst getCheckId = (project, host, port) => `lcd-${project}-${host}:${port}`;\n\nconst addService = (bend) => async (project, host, port) => {\n  const nodeServices = await bend.agent.service.list();\n  const svcName = `${project}-backend`;\n  if (nodeServices[svcName]) {\n    return null;\n  }\n  const svcDef = {\n    ID: svcName,\n    Name: svcName,\n  };\n  return bend.agent.service.upsert(svcDef);\n};\n\nconst addCheck = (bend) => async (project, host, port) => {\n  const nodeChecks = await bend.agent.check.list();\n  if (nodeChecks[getCheckId(project, host, port)]) {\n    return null;\n  }\n  const lcdHttpCheck = {\n    CheckID: getCheckId(project, host, port),\n    Name: getCheckId(project, host, port),\n    Notes: 'Checks that LCD Server is running',\n    HTTP: `http://${host}:${port}/node_info`,\n    Method: 'GET',\n    Interval: '5s',\n    ServiceID: `${project}-backend`,\n    Status: 'critical',\n  };\n  return bend.agent.check.register(lcdHttpCheck);\n};\n\nconst healthCheck = (\n  nodeChecks, project, host, port,\n) => nodeChecks[getCheckId(project, host, port)];\n\nconst shouldAlerting = (check, project, host, port) => {\n  if (!check || !check.Status) {\n    return false;\n  }\n  const failInARow = lcdStatus[getCheckId(project, host, port)];\n  if (check.Status.toUpperCase() === CONSTANT.HEALTH_CHECK_STATUS.CRITICAL) {\n    lcdStatus[getCheckId(project, host, port)] = failInARow ? failInARow + 1 : 1;\n    if (failInARow === 2) {\n      return true;\n    }\n  } else {\n    lcdStatus[getCheckId(project, host, port)] = 0;\n  }\n  return false;\n};\n\nexport default {\n  healthCheck,\n  addService,\n  addCheck,\n  shouldAlerting,\n  getCheckId,\n};\n"]}