{"version":3,"sources":["../../../src/server/controllers/statistics.js"],"names":["statusMap","WARNING","CRITICAL","getMissedBlocksChart","res","query","capture","args","project","network","get","from","to","all","InfluxStore","getBlocksByTimeOfDay","getMissedBlocksByTimeOfDay","totalBlocks","missedBlocks","ret","data","map","block","x","valueOf","y","meta","total","forEach","idx","findIndex","totalCount","Util","roundFloatNumber","writeHead","write","getMissedBlocksAlertChart","weekDays","moment","weekdaysShort","getMissedBlocksAlert","day","Array","fill","v","index","name","d","Number","weekday","hour","Math","max","reverse","getPeerCountChart","getPeerCount","item","values","val","push","slice","length","getBlockHeightsChart","getBlockHeights","getLateBlockTimeAlertChart","getLateBlockTimeAlert"],"mappings":"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","file":"statistics.js","sourcesContent":["/* eslint-disable import/no-named-as-default-member */\n/* eslint-disable max-len */\n/* eslint-disable prefer-destructuring */\nimport moment from 'moment';\nimport InfluxStore from '../../monit/influx-store';\nimport Util from '../../common/util';\n\nconst statusMap = {\n  WARNING: 1,\n  CRITICAL: 2,\n};\n\nconst getMissedBlocksChart = ({\n  query,\n  capture,\n}, res) => async (args) => {\n  const [, project] = capture;\n  const network = query.get('network');\n  const from = (query.get('from') || 0) * 1e6;\n  const to = (query.get('to') || 0) * 1e6;\n  const [totalBlocks, missedBlocks] = await Promise.all([\n    InfluxStore.getBlocksByTimeOfDay({\n      project,\n      network,\n      from,\n      to,\n    }),\n    InfluxStore.getMissedBlocksByTimeOfDay({\n      project,\n      network,\n      from,\n      to,\n    }),\n  ]);\n  const ret = [{\n    data: totalBlocks.map((block) => ({\n      x: moment(block[0]).valueOf(),\n      y: 0,\n    })),\n  }, {\n    data: totalBlocks.map((block) => ({\n      x: moment(block[0]).valueOf(),\n      y: 100,\n      meta: {\n        total: block[1],\n      },\n    })),\n  }];\n  missedBlocks.forEach((block) => {\n    const idx = totalBlocks.findIndex((x) => x[0] === block[0]);\n    const totalCount = totalBlocks[idx][1];\n    ret[0].data[idx].y = block[1];\n    ret[1].data[idx].y = Util.roundFloatNumber(((totalCount - block[1]) / totalCount) * 100, 2);\n  });\n  res.writeHead(200, {\n    'content-type': 'application/json',\n  });\n  res.write(JSON.stringify(ret));\n  return res;\n};\n\nconst getMissedBlocksAlertChart = ({\n  query,\n  capture,\n}, res) => async (args) => {\n  const [, project] = capture;\n  const network = query.get('network');\n  const from = (query.get('from') || 0) * 1e6;\n  const to = (query.get('to') || 0) * 1e6;\n  const weekDays = moment.weekdaysShort();\n  const missedBlocks = await InfluxStore.getMissedBlocksAlert({\n    project,\n    network,\n    from,\n    to,\n  });\n  const ret = weekDays.map((day) => {\n    const data = Array(24).fill().map((v, index) => ({\n      x: `${index}`,\n      y: 0,\n      meta: {\n        WARNING: 0,\n        CRITICAL: 0,\n      },\n    }));\n    return {\n      name: day,\n      data,\n    };\n  });\n  missedBlocks.forEach((block) => {\n    const d = moment(block[0]);\n    if (Number(block[1])) {\n      ret[d.weekday()].data[d.hour()].y = Math.max(ret[d.weekday()].data[d.hour()].y, statusMap[block[2]]);\n      ret[d.weekday()].data[d.hour()].meta[block[2]] += block[1];\n    }\n  });\n  res.writeHead(200, {\n    'content-type': 'application/json',\n  });\n  res.write(JSON.stringify(ret.reverse()));\n  return res;\n};\n\nconst getPeerCountChart = ({\n  query,\n  capture,\n}, res) => async (args) => {\n  const [, project] = capture;\n  const network = query.get('network');\n  const from = (query.get('from') || 0) * 1e6;\n  const to = (query.get('to') || 0) * 1e6;\n\n  let ret = await InfluxStore.getPeerCount({\n    project,\n    network,\n    from,\n    to,\n  });\n  ret = ret.map((item) => {\n    const data = [];\n    item.values.forEach((val) => {\n      data.push({\n        x: moment(val[0]).valueOf(),\n        y: val.slice(-1)[0],\n      });\n    });\n    return {\n      name: item.name,\n      data,\n    };\n  });\n  if (!ret.length) {\n    ret = [{\n      data: [],\n    }];\n  }\n  res.writeHead(200, {\n    'content-type': 'application/json',\n  });\n  res.write(JSON.stringify(ret));\n  return res;\n};\n\n\nconst getBlockHeightsChart = ({\n  query,\n  capture,\n}, res) => async (args) => {\n  const [, project] = capture;\n  const network = query.get('network');\n  const from = (query.get('from') || 0) * 1e6;\n  const to = (query.get('to') || 0) * 1e6;\n\n  let ret = await InfluxStore.getBlockHeights({\n    project,\n    network,\n    from,\n    to,\n  });\n  ret = ret.map((item) => {\n    const data = [];\n    item.values.forEach((val) => {\n      data.push({\n        x: moment(val[0]).valueOf(),\n        y: val.slice(-1)[0],\n      });\n    });\n    return {\n      name: item.name,\n      data,\n    };\n  });\n  if (!ret.length) {\n    ret = [{\n      data: [],\n    }];\n  }\n  res.writeHead(200, {\n    'content-type': 'application/json',\n  });\n  res.write(JSON.stringify(ret));\n  return res;\n};\n\nconst getLateBlockTimeAlertChart = ({\n  query,\n  capture,\n}, res) => async (args) => {\n  const [, project] = capture;\n  const network = query.get('network');\n  const from = (query.get('from') || 0) * 1e6;\n  const to = (query.get('to') || 0) * 1e6;\n  const weekDays = moment.weekdaysShort();\n  const missedBlocks = await InfluxStore.getLateBlockTimeAlert({\n    project,\n    network,\n    from,\n    to,\n  });\n  const ret = weekDays.map((day) => {\n    const data = Array(24).fill().map((v, index) => ({\n      x: `${index}`,\n      y: 0,\n      meta: {\n        WARNING: 0,\n        CRITICAL: 0,\n      },\n    }));\n    return {\n      name: day,\n      data,\n    };\n  });\n  missedBlocks.forEach((block) => {\n    const d = moment(block[0]);\n    if (Number(block[1])) {\n      ret[d.weekday()].data[d.hour()].y = Math.max(ret[d.weekday()].data[d.hour()].y, statusMap[block[2]]);\n      ret[d.weekday()].data[d.hour()].meta[block[2]] += block[1];\n    }\n  });\n  res.writeHead(200, {\n    'content-type': 'application/json',\n  });\n  res.write(JSON.stringify(ret.reverse()));\n  return res;\n};\n\nexport default {\n  getMissedBlocksChart,\n  getMissedBlocksAlertChart,\n  getPeerCountChart,\n  getLateBlockTimeAlertChart,\n  getBlockHeightsChart,\n};\n"]}